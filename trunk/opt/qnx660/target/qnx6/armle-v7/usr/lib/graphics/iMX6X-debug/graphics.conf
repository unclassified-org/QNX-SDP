begin khronos

  begin egl display 1
    egl-dlls = libGAL-gc320v0_g.so libEGL_viv_g.so
    glesv1-dlls = libGAL-gc320v0_g.so libEGL_viv_g.so libGLES_CM_viv_g.so
    glesv2-dlls = libGAL-gc320v0_g.so libEGL_viv_g.so libGLESv2_viv_g.so
    vg-dlls = libGAL-gc320v0_g.so libEGL_viv_g.so libOpenVG_viv_g.so
    glesv2-sc-dlls = libGLSLC_g.so

    # Choose ONE gpu-dlls depending on chip type.

    # OpenVG emulated on the 3D hardware.  Runs on all known i.MX6 platforms except SoloLite.
    gpu-dlls = libGalcore-3dvg_g.so

    # OpenVG on GC355 hardware in Dual and Quad.  Will NOT run on DualLite or Solo (segfault/bus error).
    # gpu-dlls = libGalcore-gc355_g.so

  end egl display

  begin wfd device 1
   # Choose ONE wfd-dlls line that matches your hardware.

   # 10" Hannstar display on LVDS0
   wfd-dlls = libwfdcfg-imx6x-hsd100pxn1_g.so libimx6xCSCgamma-generic_g.so libWFDimx6x_g.so

   # 7" Chimei Innolux 1024x600 @60 display
   # wfd-dlls = libwfdcfg-imx6x-innolux_g.so libimx6xCSCgamma-generic_g.so libWFDimx6x_g.so

   # 10" Hannstar display
   # wfd-dlls = libwfdcfg-imx6x-hsd100pxn1_g.so libimx6xCSCgamma-generic_g.so libWFDimx6x_g.so

   # HDMI display
   # wfd-dlls = libwfdcfg-imx6x-hdmi_g.so libimx6xCSCgamma-generic_g.so libWFDimx6x_g.so

   # Okaya 7" display panel
   # wfd-dlls = libwfdcfg-imx6x-okaya_g.so libimx6xCSCgamma-generic_g.so libWFDimx6x_g.so

# Display output to WFD port mapping.
# Each display output can be connected to a WFD port.
# Multiple displays can connect to a single WFD port if they
# are compatible (HDMI and LVDS are OK, Okaya 7" panel is not).
# Use port 0 to ignore an output (or comment out the line).

# WFD port 1 is IPU1 DI0.
# WFD port 2 is IPU2 DI0 (not available on DualLite or Solo).

# If there are no references to a WFD port then the IPU will
# not be used.

# This example connects WFD port 1 to HDMI, LVDS0, and
# DISP0 (parallel RGB pads).  Compatible displays required.
# WFD port 2 is connected to LVDS1 and DISP1 (Dual and Quad only).

# HDMI may be connected to WFD port 1, 2, or 0 (disabled).
   wfd-port-hdmi = 1
# LVDS0 may be connected to WFD port 1, 2, or 0 (disabled).
   wfd-port-lvds0 = 1
# LVDS1 may be connected to WFD port 1, 2, or 0 (disabled).
   wfd-port-lvds1 = 2
# DISP0 may be connected to WFD port 1 or 0 (disabled)
   wfd-port-parallel0 = 1
# DISP1 may be connected to WFD port 2 or 0 (disabled)
   wfd-port-parallel1 = 2

# This option is DEPRECATED.  Use the wfd-port mappings above instead.
# ipu-index = 1 is the default.
# ipu-index = 2 will *SWAP* the IPUs (WFD port 2 becomes IPU1).
# This option is ignored on DualLite and Solo because they have no IPU2.
   # ipu-index = 2

# If you use only one pipeline, you can optimize memory bandwidth with
# the dynamic-pipelines option, which disables unused pipelines.
# If you use two pipelines, and especially if you frequently create
# and destroy autonomous windows (e.g. with the media player, or any window
# with SCREEN_USAGE_OVERLAY), dynamic pipelines will create undesirable
# video artifacts whenever the second pipeline is enabled.
# By default, dynamic pipelines are disabled (0).
  dynamic-pipelines = 1

# Disable operations that require the IC.
# This is a workaround for applications that attempt to use operations
# that are implemented by the IC but cannot cope with the IC's restrictions.
# When the IC is disabled, WFD will refuse to support scaling, rotation,
# YUV formats, or BCHS controls, forcing applications to fall back to
# GPU implementations of these functions.
# By default the IC is disabled for AM1.1.
  # disable-ic = 0

# The 'ldb-clock-sel' parameter is deprecated and no longer has any effect.
# The driver now reads the current mux register value.

# Abort on vsync timeouts (used to detect PLL failure)
# Most users should never enable this.
   # vsync-failure-limit = 4

# enable monitoring GPU h/w (2D_core/3D_core) status and set report interval
# the following information is reported at given interval (in seconds)
# irq count
# message count (at kernel side)
# h/w status registers
   # gpu-heartbeat-interval = 10

# GPU driver contiguous memory pool sizes in MB
# Large values have better performance but longer startup time.
# Small values have a variety of performance impacts at run time.
   # gpu-contiguousMB   = 238   # maximum (254 - internalPoolMB)
   gpu-contiguousMB   = 64      # recommended
   # gpu-contiguousMB   = 2     # minimum

# Other memory pools (no need to change these)
   gpu-internalPoolMB = 16
   gpu-sharedPoolMB   = 2

# Use only the contiguous memory pool (for debugging).
# true means no virtual memory allocations.
# false means that additional virtual memory will be allocated when
# the contiguous pool is full.
  gpu-contiguousOnly = false

# Abort when GPU contiguous memory exhausted instead of allocating
# additional virtual memory (for debugging).  Default is off.
# DO NOT ENABLE THIS.
  # gpu-contiguousAbort = true

# Report GPU contiguous memory usage statistics (current and minimum
# free space) to slog every N seconds.  A value of 0 disables this feature.
# Also logs when a new minimum level of free space is reached.  Default 0.
  # gpu-slogUsageInterval = 10

# GPU power management:  If enabled, the GPU will control GPU power
# at the PMU according to GPU load.  If disabled, the driver will
# assume GPU power is already on, and will fail if it is not (e.g.
# because u-boot disabled GPU at startup).  Default false.
   gpu-pm-enable = true

# Limit power management to "power on" only.  The GPU driver will
# complete the GPU power-on sequence, but will not power off.
# If the VPU is in use this option must be enabled because the
# GPU and VPU share a power supply.  Default false.
   gpu-pm-force-power-on = true

# GPU power management:  If enabled (1), the GPU will control GPU power
# states internal to the GPU core according to GPU load.  Default 0.
# Cannot be enabled when using GPU profiling.
   gpu-powerManagement = 0

# Options to control what debug build of driver writes to slog
   debug-alloc = 0      # Logs memory allocations
   debug-buffer = 0     # Logs first 8 words of each buffer
   debug-cscgamma = 0   # Logs CSC/Gamma correction activity
   debug-idmac = 0      # Logs IDMAC parameters
   debug-ipu = 0        # Logs IPU activity (except pipeline and port)
   debug-isr = 0        # Logs IRQ statistics
   debug-lvds = 0       # Logs LVDS and LDB setup
   debug-pipeline = 0   # Logs pipeline activity
   debug-port = 0       # Logs port activity
   debug-register = 0   # Logs register activity to tracelog (not slog!)
   debug-resize = 0     # Logs resizer (IPU IC PP) activity
   debug-trace = 0      # Logs entry into each WFD function
   debug-misc = 0       # Logs everything else

  end wfd device

end khronos

begin winmgr
  begin globals
    blit-config = gc320v0
    blits-logsize = 4096
  end globals

  begin display internal
    # These are modes known to the 'hdmi' modelib.
    # If you don't specify a mode here,
    # or the mode you specify here is not in the modelib,
    # the first mode returned by modelib is used.
    # video-mode = 800 x 480 @ 76
    # video-mode = 1920 x 1200 @ 60
    # video-mode = 1920 x 1080 @ 60
    # video-mode = 1920 x 720 @ 60
    # video-mode = 1280 x 1024 @ 75
    # video-mode = 1280 x 1024 @ 75
    # video-mode = 1152 x 864 @ 75
    # video-mode = 1024 x 768 @ 75
    # video-mode = 1024 x 768 @ 60
    # video-mode = 800 x 600 @ 75
    # video-mode = 800 x 600 @ 60
    # video-mode = 640 x 480 @ 75
    # video-mode = 720 x 400 @ 70

    # These are modes known to the 'hsd100pxn1' modelib.
    # They are all the same except for the pixel clock.
    # FIXME:  Some boards seem to be unstable at 65 MHz pixel clock,
    # FIXME:  so we use a slower clock by default.
    video-mode = 1024 x 768 @ 40
    # video-mode = 1024 x 768 @ 60
    # video-mode = 1024 x 768 @ 30
    # video-mode = 1024 x 768 @ 120
    # video-mode = 1024 x 768 @ 20
    # video-mode = 1024 x 768 @ 180
    # video-mode = 1024 x 768 @ 90
    # video-mode = 1024 x 768 @ 80
    # video-mode = 1024 x 768 @ 45

    # Innolux display only
    # video-mode = 1024 x 600 @ 60

 end display

  # For display #2
  begin display 2
    video-mode = 1024 x 768 @ 60
  end display

  begin class framebuffer
    display = internal
    pipeline = 2
    format = rgba8888
    # Use these instead for framebuffer on background:
    # pipeline = 1
    # format = rgbx8888
    usage = gc320v0
  end class

  # For display #2
  begin class framebuffer
    display = 2
    pipeline = 4
    format = rgba8888
    # Use these instead for framebuffer on background:
    # pipeline = 3
    # format = rgbx8888
    usage = gc320v0
  end class

#  begin mtouch
# Choose ONE of the different mtouch drivers available
#    driver =  egalax
#    driver =  devi
#    driver =  focaltech
#  end mtouch
end winmgr
